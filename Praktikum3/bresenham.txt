void sframe::linie(int xstart, int ystart, int xend, int yend, Frame& f) {
 if (!f.on_frame(xstart,ystart)||!f.on_frame(xend,yend)){
        throw runtime_error("Ungueltiger Bereich!\n");
    }
    if (xend < xstart) {
        int xtmp = xstart;
        xstart = xend;
        xend = xtmp;

        int ytmp = ystart;
        ystart = yend;
        yend = ytmp;
    }
    bool steigend(true);
    if (yend < ystart) {
        steigend = false;
        ystart = ystart*-1;
        yend = yend*-1;
    }
    bool flach(true);
    if ((xend - xstart) < (yend - ystart)) {
        flach = false;
        // start_Xcoord mit start_Ycoord vertauschen
        int stmp = xstart;
        xstart = ystart;
        ystart = stmp;
        // end_Xcoord mit end_Ycoord vertauschen
        int etmp = xend;
        xend = yend;
        yend = etmp;
        // dafuer einen weiteren Merker setzen
    }

    int dx = xend - xstart;
    int dy = yend - ystart;
    //Entscheidungsvariable
    int differenz = ((2 * dy) - dx);
    while ((xstart != xend) && (ystart != yend)) {
        if (differenz < 0) {
            xstart = xstart + 1;

            int tempy = calc_y(xstart, ystart, flach, steigend);
            int tempx = calc_x(xstart, ystart, flach, steigend);
            if (f.on_frame(tempx, tempy)) {
                f.put_point(tempx, tempy);
            }

            differenz = differenz + (2 * dy);
        } else {
            xstart = xstart + 1;
            ystart = ystart + 1;

            int tempy = calc_y(xstart, ystart, flach, steigend);
            int tempx = calc_x(xstart, ystart, flach, steigend);
            if (f.on_frame(tempx, tempy)) {
                f.put_point(tempx, tempy);
            }
            differenz = differenz + (2 * (dy - dx));
        }
    }



}

int sframe::calc_x(int x, int y, bool flach, bool steigend) {
    if (flach) {

        return x;
    }

    return y;


}

int sframe::calc_y(int x, int y, bool flach, bool steigend) {
    if (flach) {
        if (steigend) {
            return y;
        }
        return y * (-1);
    } else {
        if (steigend) {
            return x;
        }
        return x * (-1);
    }
}